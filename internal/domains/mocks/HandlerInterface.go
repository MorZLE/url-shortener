// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"

	models "github.com/MorZLE/url-shortener/internal/models"
)

// HandlerInterface is an autogenerated mock type for the HandlerInterface type
type HandlerInterface struct {
	mock.Mock
}

// CheckPing provides a mock function with given fields: c
func (_m *HandlerInterface) CheckPing(c *gin.Context) error {
	ret := _m.Called(c)

	var r0 error
	if rf, ok := ret.Get(0).(func(*gin.Context) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// JSONURLShort provides a mock function with given fields: c, obj
func (_m *HandlerInterface) JSONURLShort(c *gin.Context, obj models.URLShort) {
	_m.Called(c, obj)
}

// RunServer provides a mock function with given fields:
func (_m *HandlerInterface) RunServer() {
	_m.Called()
}

// URLGetID provides a mock function with given fields: c
func (_m *HandlerInterface) URLGetID(c *gin.Context) {
	_m.Called(c)
}

// URLShortener provides a mock function with given fields: c
func (_m *HandlerInterface) URLShortener(c *gin.Context) {
	_m.Called(c)
}

type mockConstructorTestingTNewHandlerInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewHandlerInterface creates a new instance of HandlerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHandlerInterface(t mockConstructorTestingTNewHandlerInterface) *HandlerInterface {
	mock := &HandlerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
